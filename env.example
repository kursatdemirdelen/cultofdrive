# Supabase Configuration (server-side)
SUPABASE_URL=your_supabase_project_url
SUPABASE_KEY=your_supabase_anon_key

# Optional: If you also expose Supabase to the browser, use NEXT_PUBLIC_* in addition,
# but this project uses server-side vars above via utils/supabase.ts
NEXT_PUBLIC_SUPABASE_URL=your_supabase_project_url
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key
NEXT_PUBLIC_SITE_URL=http://localhost:3000
NEXT_PUBLIC_GOOGLE_AUTH_ENABLED=false

# Service role key used only by secure server-side jobs (e.g. cron that seeds social posts).
# Never expose this key to the browser.
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key

# Instagram API Configuration
INSTAGRAM_ACCESS_TOKEN=your_instagram_access_token
INSTAGRAM_APP_ID=your_instagram_app_id
INSTAGRAM_APP_SECRET=your_instagram_app_secret
# Refresh flow:
# 1) Exchange the short-lived token:
#    https://graph.instagram.com/access_token?grant_type=ig_exchange_token&client_secret=<APP_SECRET>&access_token=<SHORT_TOKEN>
# 2) Refresh the long-lived token every ~60 days:
#    https://graph.instagram.com/refresh_access_token?grant_type=ig_refresh_token&access_token=<LONG_TOKEN>

# Example:
# SUPABASE_URL=https://your-project.supabase.co
# SUPABASE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
# SUPABASE_SERVICE_ROLE_KEY=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
# INSTAGRAM_ACCESS_TOKEN=IGQVJ...

# Supabase table setup (run in SQL Editor):
# create table if not exists "E-mail" (
#   id uuid primary key default gen_random_uuid(),
#   e_mail text not null unique,
#   created_at timestamptz not null default now()
# );
#
# create table if not exists public.social_posts (
#   id uuid primary key default gen_random_uuid(),
#   username text not null,
#   content text not null,
#   image_url text,
#   like_count int4 not null default 0,
#   url text,
#   created_at timestamptz not null default now()
# );
# One-time seeding protection for /api/seed-cars
SEED_SECRET=your_seed_secret
